#标称特征编码 OrdinalEncoder()
from sklearn.preprocessing import OrdinalEncoder
enc = OrdinalEncoder()
X = [['Male', 1], ['Female', 3], ['Female', 2]]
enc.fit(X)

enc.categories_
#[array(['Female', 'Male'], dtype=object), array([1, 2, 3], dtype=object)]
enc.transform([['Female', 3], ['Male', 1]])
#array([[0., 2.],[1., 0.]])

#常用方法有两个，一般fit_transform(x), 或者直接传categories参数，   
#        categories_ : list of arrays
#        The categories of each feature determined during ``fit`` (in order of
#        the features in X and corresponding with the output of ``transform``).
#        This does not include categories that weren't seen during ``fit``.
 #示例：
#genders = ['female', 'male']
#locations = ['from Africa', 'from Asia', 'from Europe', 'from US']
#browsers = ['uses Chrome', 'uses Firefox', 'uses IE', 'uses Safari']
#enc = preprocessing.OneHotEncoder(categories=[genders, locations, browsers])
### Note that for there are missing categorical values for the 2nd and 3rd
### feature
#X = [['male', 'from US', 'uses Safari'], ['female', 'from Europe', 'uses Firefox']]
#enc.fit(X)


from sklearn import preprocessing
le = preprocessing.LabelEncoder()#标签编码，而不像ordinalencoder是特征编码，无法识别年龄、学历等本身带有顺序的字段.
le.fit([1, 2, 2, 6])
le.classes_
#array([1, 2, 6])
le.transform([1, 1, 2, 6])
#array([0, 0, 1, 2]...)
le.inverse_transform([0, 0, 1, 2])
#array([1, 1, 2, 6])

